{"version":3,"sources":["logo.svg","components/Buttons/Button.js","components/Text/index.js","screens/CountDownTimerScreen/index.js","components/Container/MainContainer.js","components/Container/CenterContainer.js","screens/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ButtonBasic","styled","button","_templateObject","props","theme","primaryColor","primaryColorDark","fontColor","primaryColorLight","Button","_ref","children","onClick","hidden","Object","objectWithoutProperties","react_default","a","createElement","assign","TimerText","div","Text_templateObject","CountDownTimer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTimer","interval","setInterval","updateTimer","stopTimer","initMin","initSec","setState","state","objectSpread","isPlaying","currentMin","currentSec","clearInterval","pauseTimer","_this$state","isStop","handlePercent","resetTimer","handlePlayButton","playButtonText","_this$state2","_this$state3","couputedPercent","toFixed","console","log","percent","progress","_this2","_this$state4","className","style","width","height","display","es","strokeWidth","strokeLinecap","strokeColor","Text","Buttons_Button","React","Component","MainContainer_templateObject","backgroundColor","CenterContainer","CenterContainer_templateObject","MainContainer","Main_templateObject","Main","Main_MainContainer","Container_CenterContainer","CountDownTimerScreen_CountDownTimer","DarkTheme","name","borderColor","secondaryColor","secondaryColorLight","secondaryColorDark","LightTheme","App","onChangeTheme","item","styled_components_browser_esm","Main_Main","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21c38301.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonBasic = styled.button`\n  position: relative;\n  background-color: ${props => props.theme.primaryColor};\n  border: 2px solid ${props => props.theme.primaryColorDark};\n  border-radius: 1em;\n  color: ${props => props.theme.fontColor};\n  font-size: 1em;\n  padding: 0.25em 1em;\n  margin-top: 0.5em;\n  cursor: pointer;\n  outline: none;\n  :hover {\n    background-color: ${props => props.theme.primaryColorLight};\n  }\n`;\n\nconst Button = ({ children, onClick, hidden, ...props }) => {\n  return (\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\n      {children}\n    </ButtonBasic>\n  );\n};\n\nexport default Button;","import styled from 'styled-components';\n\nconst TimerText = styled.div`\n  font-size: 110px;\n`;\n\nexport default TimerText;","import React from \"react\";\nimport { Button } from '../../components/Buttons';\nimport TimerText from '../../components/Text';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Line, Circle } from 'rc-progress';\n\n\nconst CIRCLE_COLOR = '#3FC7FA';\nexport default class CountDownTimer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      initMin: 25,\n      initSec: 0,\n      currentMin: 25,\n      currentSec: 0,\n      isPlaying: false,\n      isStop: false,\n      playButtonText: 'Start',\n      progress: 0,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  startTimer = () => {\n    this.interval = setInterval(() => {\n      this.updateTimer();\n    }, 1000);\n  }\n\n  stopTimer = (initMin, initSec) => {\n    this.setState(state => ({ ...state, isPlaying: false, currentMin: initMin, currentSec: initSec }));\n    clearInterval(this.interval);\n  }\n\n  pauseTimer = () => {\n    this.setState(state => ({ ...state, isPlaying: false }));\n    clearInterval(this.interval);\n  }\n\n  updateTimer = () => {\n    const {\n      currentMin,\n      currentSec,\n      initMin,\n      initSec,\n      isPlaying,\n      isStop\n    } = this.state;\n\n    if (isPlaying) {\n      // Handle timer\n      if (currentSec === 0) {\n        if (currentMin > 0) {\n          this.setState(state => ({ ...state, currentMin: currentMin - 1, currentSec: 59 }), () => this.handlePercent());\n        } else {\n          this.resetTimer();\n        }\n      } else {\n        this.setState(state => ({ ...state, currentSec: currentSec - 1 }), () => this.handlePercent());\n      }\n      return;\n    }\n\n    if (isStop === true) {\n      this.stopTimer(initMin, initSec);\n    } else {\n      this.pauseTimer();\n    }\n  }\n\n  handlePlayButton = () => {\n    const { isPlaying } = this.state;\n\n    if (isPlaying) {\n      this.setState(state => ({\n        ...state,\n        isPlaying: false,\n        playButtonText: 'Start'\n      }));\n    } else {\n      this.setState(state => ({\n        ...state,\n        isPlaying: true,\n        playButtonText: 'Pause'\n      }), () => this.startTimer());\n    }\n  }\n\n  resetTimer = () => {\n    const { initMin, initSec } = this.state;\n    this.setState(state => ({\n      ...state,\n      isPlaying: false,\n      isStop: true,\n      playButtonText: 'Start',\n      currentMin: initMin,\n      currentSec: initSec\n    }));\n  }\n\n  handlePercent = () => {\n    const { currentSec, currentMin, initSec, initMin } = this.state;\n    const couputedPercent = 100 * (1 - ((currentSec + currentMin * 60) / (initSec + initMin * 60)).toFixed(2));\n    console.log('couputedPercent', couputedPercent);\n    this.setState({ percent: couputedPercent });\n  }\n\n  render() {\n    const {\n      currentMin,\n      currentSec,\n      playButtonText,\n      percent\n    } = this.state;\n\n    const circleContainerStyle = {\n      width: '250px',\n      height: '250px',\n      display: 'inline-block',\n    };\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={circleContainerStyle}>\n            <Circle percent={percent} strokeWidth=\"6\" strokeLinecap=\"round\" strokeColor={CIRCLE_COLOR} />\n          </div>\n          <TimerText>\n            {currentMin}:{currentSec}\n          </TimerText>\n          <Button onClick={() => this.handlePlayButton()}>\n            {playButtonText}\n          </Button>\n          <Button onClick={() => this.resetTimer()}>\n            Stop\n          </Button>\n        </header>\n        {/* \n        <body>\n\n        </body> */}\n      </div >\n    );\n  }\n}\n","import styled from 'styled-components';\n\n// const MainContainer = styled.div`\n//   position: absolute;\n//   justify-content: center;\n//   width: 100%;\n//   height: 100%;\n//   background-color: rgba(0, 0, 0, 0.5);\n//   z-index: 30;\n// `;\nconst MainContainer = styled.div`\n  background-color: ${props => props.theme.backgroundColor};\n  height: 100vh;\n  min-height: 700px;\n  min-width: 300px;\n  overflow-x: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  color: ${props => props.theme.fontColor};\n  text-align: center;\n`;\n\nexport default MainContainer;","import styled from 'styled-components';\n\nconst CenterContainer = styled.div`\n  position: absolute;\n  justify-content: center;\n  width: 50%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 30;\n`;\n\nexport default CenterContainer;","import React from \"react\";\nimport logo from '../../logo.svg';\nimport styled from 'styled-components';\nimport CountDownTimer from '../CountDownTimerScreen';\nimport { CenterContainer } from '../../components/Container';\n\nconst MainContainer = styled.div`\n  background-color: ${props => props.theme.backgroundColor};\n  height: 100vh;\n  min-height: 700px;\n  min-width: 300px;\n  overflow-x: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  color: ${props => props.theme.fontColor};\n  text-align: center;\n`;\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    return (\n\n      <MainContainer>\n        {/* <CountDownTimer /> */}\n        <CenterContainer>\n          <CountDownTimer />\n        </CenterContainer>\n      </MainContainer>\n      // <LeftSideBar />\n\n      // <RightSideBar />\n      // <Footer />\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport Main from './screens/Main/index';\nimport { ThemeProvider } from 'styled-components';\n\nconst DarkTheme = {\n  name: 'DarkTheme',\n  backgroundColor: '#282c34',\n  fontColor: 'white',\n  borderColor: 'rgba(255,255,255,0.5)',\n  primaryColor: '#3FC7FA',\n  primaryColorLight: '#5FAAFF',\n  primaryColorDark: '#5FAAFF',\n  secondaryColor: '#34c5dc',\n  secondaryColorLight: '#60ecec',\n  secondaryColorDark: '#1992ad'\n};\nconst LightTheme = {\n  name: 'LightTheme',\n  backgroundColor: '#f3f1ee',\n  fontColor: '#1d1f23',\n  borderColor: 'rgba(200,129,0,0.1)',\n  primaryColor: '#FFA20F',\n  primaryColorLight: '#fbb941',\n  primaryColorDark: '#fb910d',\n  secondaryColor: '#34c5dc',\n  secondaryColorLight: '#60ecec',\n  secondaryColorDark: '#1992ad'\n};\n\nclass App extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      theme: DarkTheme\n    };\n  }\n  onChangeTheme = item => {\n    switch (item) {\n      case 'DarkTheme':\n        return this.setState({ theme: DarkTheme });\n      case 'LightTheme':\n        return this.setState({ theme: LightTheme });\n      default:\n        return this.setState({ theme: DarkTheme });\n    }\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={this.state.theme} >\n        <Main onChangeTheme={this.onChangeTheme} theme={this.state.theme.name} />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}